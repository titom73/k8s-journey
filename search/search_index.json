{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Kubernetes Journey # Kubernetes labs resources to support personal training on K8S List of available labs # Tips and Tricks Lab Setup TODO - Install Traefik as ingress controller TODO - NGINX with NodePort NGINX with Ingress based on vhost TODO - NGINX + Init Container with Ingress based on vhost Additional resources # container.training from @jpetazzo (Just a must read !) Full Kubernetes training from ENIX (Fr) License # Project is published under Apache 2.0 License","title":"Kubernetes Journey"},{"location":"#kubernetes-journey","text":"Kubernetes labs resources to support personal training on K8S","title":"Kubernetes Journey"},{"location":"#list-of-available-labs","text":"Tips and Tricks Lab Setup TODO - Install Traefik as ingress controller TODO - NGINX with NodePort NGINX with Ingress based on vhost TODO - NGINX + Init Container with Ingress based on vhost","title":"List of available labs"},{"location":"#additional-resources","text":"container.training from @jpetazzo (Just a must read !) Full Kubernetes training from ENIX (Fr)","title":"Additional resources"},{"location":"#license","text":"Project is published under Apache 2.0 License","title":"License"},{"location":"setup/","text":"Lab Setup # Kubernetes stack information # Ubuntu 20.04 Microk8s ( snap install --classic --edge microk8s ) Configure Microk8s # Generate Kubectl configuration # $ cd $HOME $ mkdir .kube $ cd .kube $ microk8s config > config Get authentication token for dashboard # $ token=$(microk8s kubectl -n kube-system get secret | grep default-token | cut -d \" \" -f1) $ microk8s kubectl -n kube-system describe secret $token Name: default-token-x45zn Namespace: kube-system Labels: <none> Annotations: kubernetes.io/service-account.name: default kubernetes.io/service-account.uid: f4463baa-2638-4b54-b6e2-b803a1d755c9 Type: kubernetes.io/service-account-token Data ==== ca.crt: 1103 bytes namespace: 11 bytes token: eyJhbGciOiJSUzI1NiIsImtpZCI6IkJjSTU2YTB2WGpEeGlhSm12YlBCdXgzMGpGSmN2MEIwZlNCLVI5NFFPZ00ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkZWZhdWx0LXRva2VuLXg0NXpuIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJmNDQ2M2JhYS0yNjM4LTRiNTQtYjZlMi1iODAzYTFkNzU1YzkiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06ZGVmYXVsdCJ9.CzvHqwWfKwYfqGC6fCqhMCLn2aIIDEYnOjAYFrQzQB2DwinNYacX634Jg3R0OvUaEcMt6PCLVxAB_YxgzTHM9yzI7xYUDgKrlCmfAc1_fUd0Sp_3eoY3N34s3P5X_8CrqLheg7VVlOCMHkBsKeVg8nRG0hBz5jH4oKs-cySl6fA9KktUNIsMcJ3hN5aeHRsYJ6Rbt7YOWz_RLhpfKTtK9iWysINgk4FFEJ7b7yzSX0gTBYT1kW5KamTIVcaaO9MX-ClL4aEz4clrfZ11MlOaIJwD1M0P1e2SiDl4w_U4hX5qGGKujwHRi32xhE0kfxK42MORovi7u-VuegR7DcmX7A Configure plugins # Activate plugins # DNS Plugin # $ microk8s enable dns $ microk8s kubectl -n kube-system edit configmap/coredns # Please edit the object below. Lines beginning with a '#' will be ignored, # and an empty file will abort the edit. If an error occurs while saving this file will be # reopened with the relevant failures. # apiVersion: v1 data: Corefile: | .:53 { errors health { lameduck 5s } ready log . { class error } kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure fallthrough in-addr.arpa ip6.arpa } prometheus :9153 forward . 8 .8.8.8 8 .8.4.4 cache 30 loop reload loadbalance } kind: ConfigMap metadata: annotations: kubectl.kubernetes.io/last-applied-configuration: | { \"apiVersion\" : \"v1\" , \"data\" : { \"Corefile\" : \".:53 {\\n errors\\n health {\\n lameduck 5s\\n }\\n ready\\n log . {\\n class error\\n }\\n kubernetes cluster.local in-addr.arpa ip6.arpa {\\n pods insecure\\n fallthrough in-addr.arpa ip6.arpa\\n }\\n prometheus :9153\\n forward . 8.8.8.8 8.8.4.4\\n cache 30\\n loop\\n reload\\n loadbalance\\n}\\n\" } , \"kind\" : \"ConfigMap\" , \"metadata\" : { \"annotations\" : {} , \"labels\" : { \"addonmanager.kubernetes.io/mode\" : \"EnsureExists\" , \"k8s-app\" : \"kube-dns\" } , \"name\" : \"coredns\" , \"namespace\" : \"kube-system\" }}","title":"Lab Setup"},{"location":"setup/#lab-setup","text":"","title":"Lab Setup"},{"location":"setup/#kubernetes-stack-information","text":"Ubuntu 20.04 Microk8s ( snap install --classic --edge microk8s )","title":"Kubernetes stack information"},{"location":"setup/#configure-microk8s","text":"","title":"Configure Microk8s"},{"location":"setup/#generate-kubectl-configuration","text":"$ cd $HOME $ mkdir .kube $ cd .kube $ microk8s config > config","title":"Generate Kubectl configuration"},{"location":"setup/#get-authentication-token-for-dashboard","text":"$ token=$(microk8s kubectl -n kube-system get secret | grep default-token | cut -d \" \" -f1) $ microk8s kubectl -n kube-system describe secret $token Name: default-token-x45zn Namespace: kube-system Labels: <none> Annotations: kubernetes.io/service-account.name: default kubernetes.io/service-account.uid: f4463baa-2638-4b54-b6e2-b803a1d755c9 Type: kubernetes.io/service-account-token Data ==== ca.crt: 1103 bytes namespace: 11 bytes token: eyJhbGciOiJSUzI1NiIsImtpZCI6IkJjSTU2YTB2WGpEeGlhSm12YlBCdXgzMGpGSmN2MEIwZlNCLVI5NFFPZ00ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkZWZhdWx0LXRva2VuLXg0NXpuIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJmNDQ2M2JhYS0yNjM4LTRiNTQtYjZlMi1iODAzYTFkNzU1YzkiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06ZGVmYXVsdCJ9.CzvHqwWfKwYfqGC6fCqhMCLn2aIIDEYnOjAYFrQzQB2DwinNYacX634Jg3R0OvUaEcMt6PCLVxAB_YxgzTHM9yzI7xYUDgKrlCmfAc1_fUd0Sp_3eoY3N34s3P5X_8CrqLheg7VVlOCMHkBsKeVg8nRG0hBz5jH4oKs-cySl6fA9KktUNIsMcJ3hN5aeHRsYJ6Rbt7YOWz_RLhpfKTtK9iWysINgk4FFEJ7b7yzSX0gTBYT1kW5KamTIVcaaO9MX-ClL4aEz4clrfZ11MlOaIJwD1M0P1e2SiDl4w_U4hX5qGGKujwHRi32xhE0kfxK42MORovi7u-VuegR7DcmX7A","title":"Get authentication token for dashboard"},{"location":"setup/#configure-plugins","text":"","title":"Configure plugins"},{"location":"setup/#activate-plugins","text":"","title":"Activate plugins"},{"location":"setup/#dns-plugin","text":"$ microk8s enable dns $ microk8s kubectl -n kube-system edit configmap/coredns # Please edit the object below. Lines beginning with a '#' will be ignored, # and an empty file will abort the edit. If an error occurs while saving this file will be # reopened with the relevant failures. # apiVersion: v1 data: Corefile: | .:53 { errors health { lameduck 5s } ready log . { class error } kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure fallthrough in-addr.arpa ip6.arpa } prometheus :9153 forward . 8 .8.8.8 8 .8.4.4 cache 30 loop reload loadbalance } kind: ConfigMap metadata: annotations: kubectl.kubernetes.io/last-applied-configuration: | { \"apiVersion\" : \"v1\" , \"data\" : { \"Corefile\" : \".:53 {\\n errors\\n health {\\n lameduck 5s\\n }\\n ready\\n log . {\\n class error\\n }\\n kubernetes cluster.local in-addr.arpa ip6.arpa {\\n pods insecure\\n fallthrough in-addr.arpa ip6.arpa\\n }\\n prometheus :9153\\n forward . 8.8.8.8 8.8.4.4\\n cache 30\\n loop\\n reload\\n loadbalance\\n}\\n\" } , \"kind\" : \"ConfigMap\" , \"metadata\" : { \"annotations\" : {} , \"labels\" : { \"addonmanager.kubernetes.io/mode\" : \"EnsureExists\" , \"k8s-app\" : \"kube-dns\" } , \"name\" : \"coredns\" , \"namespace\" : \"kube-system\" }}","title":"DNS Plugin"},{"location":"tips/","text":"Tips & Tricks # Tips & general settings # Shell integration # Plugin for oh-my-zsh vim ~/.zshrc plugins =( ... kubectl ) Get a shell in a K8S container # Get a shell in namespace: $ kubectl run --restart = Never --rm -it --image = alpine alpine-runner Set alias to start shell in k8s alias kalpine = 'kubectl run --restart=Never --rm -it --image=alpine alpine-runner' Namespace Switcher # Install kns $ brew tap blendle/blendle $ brew install kns Test HTTP Load Balancing # $ export SERVER = 1 .1.1.1 $ export PORT = 32081 $ while sleep 0 .3 ; do curl -s ${ SERVER } : ${ PORT } | grep name ; done Server name: \"httpenv-cfb65dd68-lkz6f\" Server name: \"httpenv-cfb65dd68-lkz6f\" Server name: \"httpenv-cfb65dd68-mv26c\" Server name: \"httpenv-cfb65dd68-mv26c\" Server name: \"httpenv-cfb65dd68-lkz6f\" Server name: \"httpenv-cfb65dd68-mv26c\" Server name: \"httpenv-cfb65dd68-lkz6f\" Server name: \"httpenv-cfb65dd68-mv26c Kill POD # Do not wait grace period for signal propagation. # Delete a pod with minimal delay $ kubectl delete pod foo --now # Force delete a pod on a dead node $ kubectl delete pod foo --force $ kubectl delete pod foo --grace-period = -1 # Period of time in seconds given to the resource to # terminate gracefully. Ignored if negative. # Set to 1 for immediate shutdown. Can only be set # to 0 when --force is true (force deletion). Deployment / Replicaset / POD relations # Deployment always create a replicaSet A replicaSet always create at least one POD $ kubectl get deploy NAME READY UP-TO-DATE AVAILABLE AGE pingpong 1 /1 1 1 4m25s $ kubectl get rs NAME DESIRED CURRENT READY AGE pingpong-6777998c97 1 1 1 4m29s $ kubectl get pods NAME READY STATUS RESTARTS AGE pingpong-6777998c97-l8dmk 1 /1 Running 0 4m34s Scale deployment # Instantiate scale up process # $ kubectl scale deployment nginx-basics --replicas = 3 deployment.apps/nginx-basics scaled Check K8S status # $ kubectl get deployments.apps nginx-basics NAME READY UP-TO-DATE AVAILABLE AGE nginx-basics 3 /3 3 3 19h $ kubectl get pods --selector = app = webui NAME READY STATUS RESTARTS AGE nginx-basics-c48d789fd-kzcbt 1 /1 Running 1 19h nginx-basics-c48d789fd-vbrmv 1 /1 Running 0 3m39s nginx-basics-c48d789fd-vx9t5 1 /1 Running 0 3m39s $ kubectl describe deployments.apps nginx-basics Name: nginx-basics Namespace: default CreationTimestamp: Tue, 23 Jun 2020 15 :44:44 +0200 Labels: <none> Annotations: deployment.kubernetes.io/revision: 1 kubectl.kubernetes.io/last-applied-configuration: ... Selector: app = webui Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25 % max unavailable, 25 % max surge Pod Template: Labels: app = webui Containers: nginx: Image: titom73/nginx Port: 80 /TCP Host Port: 0 /TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Progressing True NewReplicaSetAvailable Available True MinimumReplicasAvailable OldReplicaSets: <none> NewReplicaSet: nginx-basics-c48d789fd ( 3 /3 replicas created ) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 4m5s deployment-controller Scaled up replica set nginx-basics-c48d789fd to 3 Check with Server requests # $ while sleep 0 .3 ; do curl -s test.lab.as73.inetsix.net/basics | grep name ; done Server name: nginx-basics-c48d789fd-kzcbt Server name: nginx-basics-c48d789fd-vbrmv Server name: nginx-basics-c48d789fd-vx9t5 Server name: nginx-basics-c48d789fd-kzcbt Server name: nginx-basics-c48d789fd-vbrmv Tricks # DNS configuration # $ microk8s enable dns $ microk8s kubectl -n kube-system edit configmap/coredns # Please edit the object below. Lines beginning with a '#' will be ignored, # and an empty file will abort the edit. If an error occurs while saving this file will be # reopened with the relevant failures. # apiVersion: v1 data: Corefile: | .:53 { errors health { lameduck 5s } ready log . { class error } kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure fallthrough in-addr.arpa ip6.arpa } prometheus :9153 forward . 8 .8.8.8 8 .8.4.4 cache 30 loop reload loadbalance } kind: ConfigMap metadata: annotations: kubectl.kubernetes.io/last-applied-configuration: | [ ... output truncated ... ] Issue with DNS resolution on Alpine # k8s-journey/manifests on \ue0a0 master [?] at \u2638\ufe0f microk8s \u279c kubectl describe pod pingpong-8558fd45c7-pqc7p Name: pingpong-8558fd45c7-pqc7p Namespace: default Priority: 0 Node: k8s-node01/10.73.1.248 Start Time: Mon, 22 Jun 2020 22:50:15 +0200 Labels: app=pingpong pod-template-hash=8558fd45c7 [... output truncated ...] Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 4m38s default-scheduler Successfully assigned default/pingpong-8558fd45c7-pqc7p to k8s-node01 Normal Pulling 4m22s (x3 over 4m37s) kubelet, k8s-node01 Pulling image \"alpine\" Normal Pulled 4m22s (x3 over 4m36s) kubelet, k8s-node01 Successfully pulled image \"alpine\" Normal Created 4m21s (x3 over 4m36s) kubelet, k8s-node01 Created container alpine Normal Started 4m21s (x3 over 4m36s) kubelet, k8s-node01 Started container alpine Warning BackOff 4m9s (x4 over 4m34s) kubelet, k8s-node01 Back-off restarting failed container Warning DNSConfigForming 3m55s (x9 over 4m38s) kubelet, k8s-node01 Search Line limits were exceeded, some search paths have been omitted, the applied search line is: default.svc.cluster.local svc.cluster.local cluster.local lab.as73.inetsix.net as73047inetsix.net inetsix.net Reason is search name in DNS cannot exceed 6 dns domains : const ( // Limits on various DNS parameters. These are derived from // restrictions in Linux libc name resolution handling. // Max number of DNS name servers. MaxDNSNameservers = 3 // Max number of domains in search path. MaxDNSSearchPaths = 6 // Max number of characters in search path. MaxDNSSearchListChars = 256 ) Discussion on Stackoverflow","title":"Tips & Tricks"},{"location":"tips/#tips-tricks","text":"","title":"Tips &amp; Tricks"},{"location":"tips/#tips-general-settings","text":"","title":"Tips &amp; general settings"},{"location":"tips/#shell-integration","text":"Plugin for oh-my-zsh vim ~/.zshrc plugins =( ... kubectl )","title":"Shell integration"},{"location":"tips/#get-a-shell-in-a-k8s-container","text":"Get a shell in namespace: $ kubectl run --restart = Never --rm -it --image = alpine alpine-runner Set alias to start shell in k8s alias kalpine = 'kubectl run --restart=Never --rm -it --image=alpine alpine-runner'","title":"Get a shell in a K8S container"},{"location":"tips/#namespace-switcher","text":"Install kns $ brew tap blendle/blendle $ brew install kns","title":"Namespace Switcher"},{"location":"tips/#test-http-load-balancing","text":"$ export SERVER = 1 .1.1.1 $ export PORT = 32081 $ while sleep 0 .3 ; do curl -s ${ SERVER } : ${ PORT } | grep name ; done Server name: \"httpenv-cfb65dd68-lkz6f\" Server name: \"httpenv-cfb65dd68-lkz6f\" Server name: \"httpenv-cfb65dd68-mv26c\" Server name: \"httpenv-cfb65dd68-mv26c\" Server name: \"httpenv-cfb65dd68-lkz6f\" Server name: \"httpenv-cfb65dd68-mv26c\" Server name: \"httpenv-cfb65dd68-lkz6f\" Server name: \"httpenv-cfb65dd68-mv26c","title":"Test HTTP Load Balancing"},{"location":"tips/#kill-pod","text":"Do not wait grace period for signal propagation. # Delete a pod with minimal delay $ kubectl delete pod foo --now # Force delete a pod on a dead node $ kubectl delete pod foo --force $ kubectl delete pod foo --grace-period = -1 # Period of time in seconds given to the resource to # terminate gracefully. Ignored if negative. # Set to 1 for immediate shutdown. Can only be set # to 0 when --force is true (force deletion).","title":"Kill POD"},{"location":"tips/#deployment-replicaset-pod-relations","text":"Deployment always create a replicaSet A replicaSet always create at least one POD $ kubectl get deploy NAME READY UP-TO-DATE AVAILABLE AGE pingpong 1 /1 1 1 4m25s $ kubectl get rs NAME DESIRED CURRENT READY AGE pingpong-6777998c97 1 1 1 4m29s $ kubectl get pods NAME READY STATUS RESTARTS AGE pingpong-6777998c97-l8dmk 1 /1 Running 0 4m34s","title":"Deployment / Replicaset / POD relations"},{"location":"tips/#scale-deployment","text":"","title":"Scale deployment"},{"location":"tips/#instantiate-scale-up-process","text":"$ kubectl scale deployment nginx-basics --replicas = 3 deployment.apps/nginx-basics scaled","title":"Instantiate scale up process"},{"location":"tips/#check-k8s-status","text":"$ kubectl get deployments.apps nginx-basics NAME READY UP-TO-DATE AVAILABLE AGE nginx-basics 3 /3 3 3 19h $ kubectl get pods --selector = app = webui NAME READY STATUS RESTARTS AGE nginx-basics-c48d789fd-kzcbt 1 /1 Running 1 19h nginx-basics-c48d789fd-vbrmv 1 /1 Running 0 3m39s nginx-basics-c48d789fd-vx9t5 1 /1 Running 0 3m39s $ kubectl describe deployments.apps nginx-basics Name: nginx-basics Namespace: default CreationTimestamp: Tue, 23 Jun 2020 15 :44:44 +0200 Labels: <none> Annotations: deployment.kubernetes.io/revision: 1 kubectl.kubernetes.io/last-applied-configuration: ... Selector: app = webui Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25 % max unavailable, 25 % max surge Pod Template: Labels: app = webui Containers: nginx: Image: titom73/nginx Port: 80 /TCP Host Port: 0 /TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Progressing True NewReplicaSetAvailable Available True MinimumReplicasAvailable OldReplicaSets: <none> NewReplicaSet: nginx-basics-c48d789fd ( 3 /3 replicas created ) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 4m5s deployment-controller Scaled up replica set nginx-basics-c48d789fd to 3","title":"Check K8S status"},{"location":"tips/#check-with-server-requests","text":"$ while sleep 0 .3 ; do curl -s test.lab.as73.inetsix.net/basics | grep name ; done Server name: nginx-basics-c48d789fd-kzcbt Server name: nginx-basics-c48d789fd-vbrmv Server name: nginx-basics-c48d789fd-vx9t5 Server name: nginx-basics-c48d789fd-kzcbt Server name: nginx-basics-c48d789fd-vbrmv","title":"Check with Server requests"},{"location":"tips/#tricks","text":"","title":"Tricks"},{"location":"tips/#dns-configuration","text":"$ microk8s enable dns $ microk8s kubectl -n kube-system edit configmap/coredns # Please edit the object below. Lines beginning with a '#' will be ignored, # and an empty file will abort the edit. If an error occurs while saving this file will be # reopened with the relevant failures. # apiVersion: v1 data: Corefile: | .:53 { errors health { lameduck 5s } ready log . { class error } kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure fallthrough in-addr.arpa ip6.arpa } prometheus :9153 forward . 8 .8.8.8 8 .8.4.4 cache 30 loop reload loadbalance } kind: ConfigMap metadata: annotations: kubectl.kubernetes.io/last-applied-configuration: | [ ... output truncated ... ]","title":"DNS configuration"},{"location":"tips/#issue-with-dns-resolution-on-alpine","text":"k8s-journey/manifests on \ue0a0 master [?] at \u2638\ufe0f microk8s \u279c kubectl describe pod pingpong-8558fd45c7-pqc7p Name: pingpong-8558fd45c7-pqc7p Namespace: default Priority: 0 Node: k8s-node01/10.73.1.248 Start Time: Mon, 22 Jun 2020 22:50:15 +0200 Labels: app=pingpong pod-template-hash=8558fd45c7 [... output truncated ...] Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 4m38s default-scheduler Successfully assigned default/pingpong-8558fd45c7-pqc7p to k8s-node01 Normal Pulling 4m22s (x3 over 4m37s) kubelet, k8s-node01 Pulling image \"alpine\" Normal Pulled 4m22s (x3 over 4m36s) kubelet, k8s-node01 Successfully pulled image \"alpine\" Normal Created 4m21s (x3 over 4m36s) kubelet, k8s-node01 Created container alpine Normal Started 4m21s (x3 over 4m36s) kubelet, k8s-node01 Started container alpine Warning BackOff 4m9s (x4 over 4m34s) kubelet, k8s-node01 Back-off restarting failed container Warning DNSConfigForming 3m55s (x9 over 4m38s) kubelet, k8s-node01 Search Line limits were exceeded, some search paths have been omitted, the applied search line is: default.svc.cluster.local svc.cluster.local cluster.local lab.as73.inetsix.net as73047inetsix.net inetsix.net Reason is search name in DNS cannot exceed 6 dns domains : const ( // Limits on various DNS parameters. These are derived from // restrictions in Linux libc name resolution handling. // Max number of DNS name servers. MaxDNSNameservers = 3 // Max number of domains in search path. MaxDNSSearchPaths = 6 // Max number of characters in search path. MaxDNSSearchListChars = 256 ) Discussion on Stackoverflow","title":"Issue with DNS resolution on Alpine"},{"location":"docker/nginx/","text":"NGINX image # Small docker image running NGINX on standard HTTP port and with a default page returning: Server Address Server name Server Date URI Request ID Docker image: titom73/nginx Example: # Docker # \u279c docker run --rm -d -p 32081 :80 titom73/nginx 093b8ee991330560cdd1b6df47bc9d77510925e5caa9b28046316daf0d4f5b1b \u279c curl -s http://127.0.0.1:32081 Server address: 172 .17.0.2:80 Server name: 093b8ee99133 Date: 24 /Jun/2020:07:16:16 +0000 URI: / Request ID: c06ffc69c6aae7e99efe0bbff235ca8d Kubernetes # $ kubectl apply -f https://raw.githubusercontent.com/titom73/k8s-journey/master/manifests/deploy-nginx-hello.yml","title":"Index"},{"location":"docker/nginx/#nginx-image","text":"Small docker image running NGINX on standard HTTP port and with a default page returning: Server Address Server name Server Date URI Request ID Docker image: titom73/nginx","title":"NGINX image"},{"location":"docker/nginx/#example","text":"","title":"Example:"},{"location":"docker/nginx/#docker","text":"\u279c docker run --rm -d -p 32081 :80 titom73/nginx 093b8ee991330560cdd1b6df47bc9d77510925e5caa9b28046316daf0d4f5b1b \u279c curl -s http://127.0.0.1:32081 Server address: 172 .17.0.2:80 Server name: 093b8ee99133 Date: 24 /Jun/2020:07:16:16 +0000 URI: / Request ID: c06ffc69c6aae7e99efe0bbff235ca8d","title":"Docker"},{"location":"docker/nginx/#kubernetes","text":"$ kubectl apply -f https://raw.githubusercontent.com/titom73/k8s-journey/master/manifests/deploy-nginx-hello.yml","title":"Kubernetes"},{"location":"pod-deployments/nginx-with-ingress-vhost/","text":"NGINX with Ingress based on vhost # Description # Deploy an NGINX pod and allow access from outside using traefik as ingress controller using virtual host. Deploy content # Complete manifest is available under manifests folder Create deployment # apiVersion : apps/v1 kind : Deployment metadata : name : nginx-basics spec : selector : matchLabels : app : webui replicas : 1 template : metadata : labels : app : webui spec : containers : - name : nginx image : titom73/nginx ports : - containerPort : 80 Expose service # Service is only available with ClusterIP and could not be reached from outside. --- apiVersion : v1 kind : Service metadata : labels : app : nginx name : nginx-basics spec : ports : - port : 80 protocol : TCP targetPort : 80 selector : app : webui type : ClusterIP Create Ingress # --- apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : nginx-basics spec : rules : - host : test.lab.as73.inetsix.net http : paths : - path : / backend : serviceName : nginx-basics servicePort : 80 Host MUST be changed according your own setup. nip.io might provide a solution to create your host Use built-in manifest # $ kubectl apply -f manifest/deploy-nginx-basic.yml deployment.apps/nginx-basics created service/nginx-basic created ingress.networking.k8s.io/nginx-basics created Check result # Traefik validation # From shell # Shell in Kubernetes using SVC name $ kalpine If you don ' t see a command prompt, try pressing enter. / # ap$ kubectl add curl fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz ( 1 /4 ) Installing ca-certificates ( 20191127 -r4 ) ( 2 /4 ) Installing nghttp2-libs ( 1 .41.0-r0 ) ( 3 /4 ) Installing libcurl ( 7 .69.1-r0 ) ( 4 /4 ) Installing curl ( 7 .69.1-r0 ) Executing busybox-1.31.1-r16.trigger Executing ca-certificates-20191127-r4.trigger OK: 7 MiB in 18 packages / # curl nginx-basics Server address: 10 .1.32.32:80 Server name: nginx-basics-c48d789fd-kzcbt Date: 23 /Jun/2020:13:46:42 +0000 URI: / Request ID: 36ee8606b2ecb63d877f7ebc8c49d3a5 Shell in Kubernetes using SVC name / # curl test.lab.as73.inetsix.net/basics Server address: 10 .1.32.32:80 Server name: nginx-basics-c48d789fd-kzcbt Date: 23 /Jun/2020:13:56:30 +0000 URI: /basics Request ID: e1b7e84d56315e41cd3864ae37b921c0 Shell from laptop @tomcat \u279c ~ curl test.lab.as73.inetsix.net/basics Server address: 10 .1.32.32:80 Server name: nginx-basics-c48d789fd-kzcbt Date: 23 /Jun/2020:13:52:37 +0000 URI: /basics Request ID: 9d2133fc127ab172cf3dfc0a95f6554d Chek Kubernetes status # Chek deployment # $ kubectl get deployments NAME READY UP-TO-DATE AVAILABLE AGE nginx-basics 1 /1 1 1 28m And get more details: $ kubectl describe deployments.apps nginx-basics Name: nginx-basics Namespace: default CreationTimestamp: Tue, 23 Jun 2020 12:18:05 +0200 Labels: <none> Annotations: deployment.kubernetes.io/revision: 1 kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-basics\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1... Selector: app=webui Replicas: 1 desired | 1 updated | 1 total | 1 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=webui Containers: nginx: Image: nginx Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Progressing True NewReplicaSetAvailable Available True MinimumReplicasAvailable OldReplicaSets: <none> NewReplicaSet: nginx-basics-8c54c7598 (1/1 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 30m deployment-controller Scaled up replica set nginx-basics-8c54c7598 to 1 Normal ScalingReplicaSet 29m deployment-controller Scaled up replica set nginx-basics-8c54c7598 to 3 Normal ScalingReplicaSet 29m deployment-controller Scaled down replica set nginx-basics-8c54c7598 to 1 Chec$ kubectl POD # $ kubectl get pod NAME READY STATUS RESTARTS AGE nginx-basics-8c54c7598-rd475 1/1 Running 0 34m Name: nginx-basics-8c54c7598-rd475 Namespace: default Priority: 0 Node: k8s-node1/10.73.1.248 Start Time: Tue, 23 Jun 2020 12 :18:05 +0200 Labels: app = webui pod-template-hash = 8c54c7598 Annotations: <none> Status: Running IP: 10 .1.32.28 IPs: IP: 10 .1.32.28 Controlled By: ReplicaSet/nginx-basics-8c54c7598 Containers: nginx: Container ID: containerd://c738ac9d6c8d7ee00e5d56e7d422f7873c5333c3df70528367989623dbc51343 Image: nginx Image ID: docker.io/library/nginx@sha256:21f32f6c08406306d822a0e6e8b7dc81f53f336570e852e25fbe1e3e3d0d0133 Port: 80 /TCP Host Port: 0 /TCP State: Running Started: Tue, 23 Jun 2020 12 :18:07 +0200 Ready: True Restart Count: 0 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-tp69t ( ro ) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-tp69t: Type: Secret ( a volume populated by a Secret ) SecretName: default-token-tp69t Optional: false QoS Class: BestEffort Node-Selectors: <none> Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 35m default-scheduler Successfully assigned default/nginx-basics-8c54c7598-rd475 to k8s-node1 Normal Pulling 35m kubelet, k8s-node1 Pulling image \"nginx\" Normal Pulled 35m kubelet, k8s-node1 Successfully pulled image \"nginx\" Normal Created 35m kubelet, k8s-node1 Created container nginx Normal Started 34m kubelet, k8s-node1 Started container nginx Chec$ kubectl Service # $ kubectl get services NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE kubernetes ClusterIP 10 .152.183.1 <none> 443 /TCP 144m nginx-basics ClusterIP 10 .152.183.49 <none> 80 /TCP 38m nginx-hello-world NodePort 10 .152.183.104 <none> 80 :31788/TCP 41m Display service details $ kubectl describe service nginx-basics Name: nginx-basics Namespace: default Labels: app = nginx Annotations: kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"v1\" , \"kind\" : \"Service\" , \"metadata\" : { \"annotations\" : {} , \"labels\" : { \"app\" : \"nginx\" } , \"name\" : \"nginx-basics\" , \"namespace\" : \"default\" } , \"sp... Selector: app=webui Type: ClusterIP IP: 10.152.183.49 Port: <unset> 80/TCP TargetPort: 80/TCP Endpoints: 10.1.32.28:80 Session Affinity: None Events: <none> Chec$ kubectl ingress services # $ kubectl get ingress NAME CLASS HOSTS ADDRESS PORTS AGE nginx-basics <none> test.lab.as73.inetsix.net 80 40m $ kubectl describe ingress nginx-basics Name: nginx-basics Namespace: default Address: Default backend: default-http-backend:80 ( <none> ) Rules: Host Path Backends ---- ---- -------- test.lab.as73.inetsix.net / nginx-basics:80 ( 10 .1.32.28:80 ) Annotations: kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"networking.k8s.io/v1beta1\" , \"kind\" : \"Ingress\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"nginx-basics\" , \"namespace\" : \"default\" } , \"spec\" : { \"rules\" : [{ \"host\" : \"test.lab.as73.inetsix.net\" , \"http\" : { \"paths\" : [{ \"backend\" : { \"serviceName\" : \"nginx-basics\" , \"servicePort\" :80 } , \"path\" : \"/\" }]}}]}} Events: <none> Next steps # Specific load balancing # This part needs to deploy 3 different PODs to load balance across 3 different PODs apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : cheeseplate annotations : traefik.ingress.kubernetes.io/service-weights : | spoon01: 50% spoon02: 25% spoon03: 25% spec : rules : - host : test2.lab.as73.inetsix.net http : paths : - path : / backend : serviceName : spoon01 servicePort : 80 - path : / backend : serviceName : spoon02 servicePort : 80 - path : / backend : serviceName : spoon03 servicePort : 80","title":"NGINX with Ingress based on vhost"},{"location":"pod-deployments/nginx-with-ingress-vhost/#nginx-with-ingress-based-on-vhost","text":"","title":"NGINX with Ingress based on vhost"},{"location":"pod-deployments/nginx-with-ingress-vhost/#description","text":"Deploy an NGINX pod and allow access from outside using traefik as ingress controller using virtual host.","title":"Description"},{"location":"pod-deployments/nginx-with-ingress-vhost/#deploy-content","text":"Complete manifest is available under manifests folder","title":"Deploy content"},{"location":"pod-deployments/nginx-with-ingress-vhost/#create-deployment","text":"apiVersion : apps/v1 kind : Deployment metadata : name : nginx-basics spec : selector : matchLabels : app : webui replicas : 1 template : metadata : labels : app : webui spec : containers : - name : nginx image : titom73/nginx ports : - containerPort : 80","title":"Create deployment"},{"location":"pod-deployments/nginx-with-ingress-vhost/#expose-service","text":"Service is only available with ClusterIP and could not be reached from outside. --- apiVersion : v1 kind : Service metadata : labels : app : nginx name : nginx-basics spec : ports : - port : 80 protocol : TCP targetPort : 80 selector : app : webui type : ClusterIP","title":"Expose service"},{"location":"pod-deployments/nginx-with-ingress-vhost/#create-ingress","text":"--- apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : nginx-basics spec : rules : - host : test.lab.as73.inetsix.net http : paths : - path : / backend : serviceName : nginx-basics servicePort : 80 Host MUST be changed according your own setup. nip.io might provide a solution to create your host","title":"Create Ingress"},{"location":"pod-deployments/nginx-with-ingress-vhost/#use-built-in-manifest","text":"$ kubectl apply -f manifest/deploy-nginx-basic.yml deployment.apps/nginx-basics created service/nginx-basic created ingress.networking.k8s.io/nginx-basics created","title":"Use built-in manifest"},{"location":"pod-deployments/nginx-with-ingress-vhost/#check-result","text":"","title":"Check result"},{"location":"pod-deployments/nginx-with-ingress-vhost/#traefik-validation","text":"","title":"Traefik validation"},{"location":"pod-deployments/nginx-with-ingress-vhost/#from-shell","text":"Shell in Kubernetes using SVC name $ kalpine If you don ' t see a command prompt, try pressing enter. / # ap$ kubectl add curl fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz ( 1 /4 ) Installing ca-certificates ( 20191127 -r4 ) ( 2 /4 ) Installing nghttp2-libs ( 1 .41.0-r0 ) ( 3 /4 ) Installing libcurl ( 7 .69.1-r0 ) ( 4 /4 ) Installing curl ( 7 .69.1-r0 ) Executing busybox-1.31.1-r16.trigger Executing ca-certificates-20191127-r4.trigger OK: 7 MiB in 18 packages / # curl nginx-basics Server address: 10 .1.32.32:80 Server name: nginx-basics-c48d789fd-kzcbt Date: 23 /Jun/2020:13:46:42 +0000 URI: / Request ID: 36ee8606b2ecb63d877f7ebc8c49d3a5 Shell in Kubernetes using SVC name / # curl test.lab.as73.inetsix.net/basics Server address: 10 .1.32.32:80 Server name: nginx-basics-c48d789fd-kzcbt Date: 23 /Jun/2020:13:56:30 +0000 URI: /basics Request ID: e1b7e84d56315e41cd3864ae37b921c0 Shell from laptop @tomcat \u279c ~ curl test.lab.as73.inetsix.net/basics Server address: 10 .1.32.32:80 Server name: nginx-basics-c48d789fd-kzcbt Date: 23 /Jun/2020:13:52:37 +0000 URI: /basics Request ID: 9d2133fc127ab172cf3dfc0a95f6554d","title":"From shell"},{"location":"pod-deployments/nginx-with-ingress-vhost/#chek-kubernetes-status","text":"","title":"Chek Kubernetes status"},{"location":"pod-deployments/nginx-with-ingress-vhost/#chek-deployment","text":"$ kubectl get deployments NAME READY UP-TO-DATE AVAILABLE AGE nginx-basics 1 /1 1 1 28m And get more details: $ kubectl describe deployments.apps nginx-basics Name: nginx-basics Namespace: default CreationTimestamp: Tue, 23 Jun 2020 12:18:05 +0200 Labels: <none> Annotations: deployment.kubernetes.io/revision: 1 kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-basics\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1... Selector: app=webui Replicas: 1 desired | 1 updated | 1 total | 1 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=webui Containers: nginx: Image: nginx Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Progressing True NewReplicaSetAvailable Available True MinimumReplicasAvailable OldReplicaSets: <none> NewReplicaSet: nginx-basics-8c54c7598 (1/1 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 30m deployment-controller Scaled up replica set nginx-basics-8c54c7598 to 1 Normal ScalingReplicaSet 29m deployment-controller Scaled up replica set nginx-basics-8c54c7598 to 3 Normal ScalingReplicaSet 29m deployment-controller Scaled down replica set nginx-basics-8c54c7598 to 1","title":"Chek deployment"},{"location":"pod-deployments/nginx-with-ingress-vhost/#chec-kubectl-pod","text":"$ kubectl get pod NAME READY STATUS RESTARTS AGE nginx-basics-8c54c7598-rd475 1/1 Running 0 34m Name: nginx-basics-8c54c7598-rd475 Namespace: default Priority: 0 Node: k8s-node1/10.73.1.248 Start Time: Tue, 23 Jun 2020 12 :18:05 +0200 Labels: app = webui pod-template-hash = 8c54c7598 Annotations: <none> Status: Running IP: 10 .1.32.28 IPs: IP: 10 .1.32.28 Controlled By: ReplicaSet/nginx-basics-8c54c7598 Containers: nginx: Container ID: containerd://c738ac9d6c8d7ee00e5d56e7d422f7873c5333c3df70528367989623dbc51343 Image: nginx Image ID: docker.io/library/nginx@sha256:21f32f6c08406306d822a0e6e8b7dc81f53f336570e852e25fbe1e3e3d0d0133 Port: 80 /TCP Host Port: 0 /TCP State: Running Started: Tue, 23 Jun 2020 12 :18:07 +0200 Ready: True Restart Count: 0 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-tp69t ( ro ) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-tp69t: Type: Secret ( a volume populated by a Secret ) SecretName: default-token-tp69t Optional: false QoS Class: BestEffort Node-Selectors: <none> Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 35m default-scheduler Successfully assigned default/nginx-basics-8c54c7598-rd475 to k8s-node1 Normal Pulling 35m kubelet, k8s-node1 Pulling image \"nginx\" Normal Pulled 35m kubelet, k8s-node1 Successfully pulled image \"nginx\" Normal Created 35m kubelet, k8s-node1 Created container nginx Normal Started 34m kubelet, k8s-node1 Started container nginx","title":"Chec$ kubectl POD"},{"location":"pod-deployments/nginx-with-ingress-vhost/#chec-kubectl-service","text":"$ kubectl get services NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE kubernetes ClusterIP 10 .152.183.1 <none> 443 /TCP 144m nginx-basics ClusterIP 10 .152.183.49 <none> 80 /TCP 38m nginx-hello-world NodePort 10 .152.183.104 <none> 80 :31788/TCP 41m Display service details $ kubectl describe service nginx-basics Name: nginx-basics Namespace: default Labels: app = nginx Annotations: kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"v1\" , \"kind\" : \"Service\" , \"metadata\" : { \"annotations\" : {} , \"labels\" : { \"app\" : \"nginx\" } , \"name\" : \"nginx-basics\" , \"namespace\" : \"default\" } , \"sp... Selector: app=webui Type: ClusterIP IP: 10.152.183.49 Port: <unset> 80/TCP TargetPort: 80/TCP Endpoints: 10.1.32.28:80 Session Affinity: None Events: <none>","title":"Chec$ kubectl Service"},{"location":"pod-deployments/nginx-with-ingress-vhost/#chec-kubectl-ingress-services","text":"$ kubectl get ingress NAME CLASS HOSTS ADDRESS PORTS AGE nginx-basics <none> test.lab.as73.inetsix.net 80 40m $ kubectl describe ingress nginx-basics Name: nginx-basics Namespace: default Address: Default backend: default-http-backend:80 ( <none> ) Rules: Host Path Backends ---- ---- -------- test.lab.as73.inetsix.net / nginx-basics:80 ( 10 .1.32.28:80 ) Annotations: kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"networking.k8s.io/v1beta1\" , \"kind\" : \"Ingress\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"nginx-basics\" , \"namespace\" : \"default\" } , \"spec\" : { \"rules\" : [{ \"host\" : \"test.lab.as73.inetsix.net\" , \"http\" : { \"paths\" : [{ \"backend\" : { \"serviceName\" : \"nginx-basics\" , \"servicePort\" :80 } , \"path\" : \"/\" }]}}]}} Events: <none>","title":"Chec$ kubectl ingress services"},{"location":"pod-deployments/nginx-with-ingress-vhost/#next-steps","text":"","title":"Next steps"},{"location":"pod-deployments/nginx-with-ingress-vhost/#specific-load-balancing","text":"This part needs to deploy 3 different PODs to load balance across 3 different PODs apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : cheeseplate annotations : traefik.ingress.kubernetes.io/service-weights : | spoon01: 50% spoon02: 25% spoon03: 25% spec : rules : - host : test2.lab.as73.inetsix.net http : paths : - path : / backend : serviceName : spoon01 servicePort : 80 - path : / backend : serviceName : spoon02 servicePort : 80 - path : / backend : serviceName : spoon03 servicePort : 80","title":"Specific load balancing"}]}