---
# Default values for netbox.
#
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# kind -- Type of deployment (StatefulSet or Deployment)
kind: Deployment

statefulSet:
  # statefulSet.replicaCount -- Number of Netbox Pods to run (StatefulSet mode)
  replicaCount: 1

deployment:
  # deployment.replicaCount -- Number of Netbox Pods to run (Deployment mode)
  replicaCount: 1

# updateStrategy -- Update strategy policy
updateStrategy:
  type: RollingUpdate

serviceAccount:
  # serviceAccount.create -- Specifies whether a service account should be created
  create: true
  # serviceAccount.annotations -- Annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- Name of the service account to use. Default is derived from fullname template
  name:



# extraLabels -- Extra labels to add on chart resources
extraLabels: {}

image:
  # image.repository -- Netbox image
  repository: netboxcommunity/netbox
  # image.tag -- Netbox image version
  tag:
  # image.pullPolicy -- Netbox image pull policy
  # pullPolicy: IfNotPresent
  pullPolicy: Always
  # image.ldap -- Switch docker image tag to the ldap flavor
  ldap: false

nginxImage:
  # nginxImage.repository -- Nginx image
  repository: nginx
  # nginxImage.tag -- Nginx image version
  tag: 1.17.9-alpine
  # nginxImage.pullPolicy -- Nginx image pull policy
  pullPolicy: IfNotPresent

# restartPolicy -- Pods restart policy
restartPolicy: Always

# nameOverride -- String to partially override netbox.fullname template with a string (will prepend the release name)
nameOverride: ""
# fullnameOverride -- String to fully override netbox.fullname template with a string
fullnameOverride: ""

service:
  # service.type -- Kubernetes Service type
  type: NodePort
  # service.port -- Port to use to access Netbox
  port: 80

# initializers -- Netbox initializer file content (mounted in /opt/netbox/initializers/)
initializers: {}

ingress:
  # ingress.enabled -- Enable ingress controller resource
  enabled: false
  # ingress.isNginx -- Enable special annotation for Nginx ingress (adds proxy-body-size). See Nginx section.
  isNginx: true
  # ingress.annotations -- Ingress annotations
  annotations: {}
  # ingress.paths -- Ingress Paths
  paths:
    - /
  # ingress.hosts -- Ingress Hosts
  hosts:
    - netbox.local
    # - '10.83.28.163'
  # ingress.tls -- Ingress TLS
  tls: []
  #  - secretName: netbox
  #    hosts:
  #      - netbox.local

persistence:
  # persistence.enabled -- Enable statefulSet persistency
  enabled: false
  # persistence.accessModes -- Persistent Volume Access Modes. Only for statefulSet Mode
  accessModes:
   - 'ReadWriteOnce'
  # persistence.size -- Size of data volume. Only for statefulSet Mode
  size: "5G"
  # persistence.storageClassName -- Storage class of backing PVC. Only for statefulSet Mode
  storageClassName: ''
  # persistence.customVolumeClaims -- Entirely customize VolumeClaims. Only for statefulSet Mode
  customVolumeClaims: ''

# livenessProbe -- livenessProbe configuration on Netbox Pod
livenessProbe:
  httpGet:
    path: /api/
    port: http

# readinessProbe -- readinessProbe configuration on Netbox Pod
readinessProbe:
  httpGet:
    path: /api/
    port: http

# resources -- resources configuration on Netbox Pod
resources: {}

# nodeSelector -- nodeSelector configuration on Netbox Pod
nodeSelector: {}

# tolerations -- tolerations to add on Netbox Pod
tolerations: []

# affinity -- affinity configuration on Netbox Pod
affinity: {}

# allowedHosts -- "ALLOWED_HOSTS" in Netbox configuration
allowedHosts: "*"
# emailFrom -- From address of email sent by Netbox
emailFrom:
# emailServer -- Email server used by Netbox
emailServer:
# emailPort -- SMTP port to use on email server
emailPort: 25
# emailTimeout -- Timeout in email communications
emailTimeout: 10
# emailUsername -- Username to use on email server
emailUsername: ""
# emailPassword -- Password to use on email server
emailPassword: ""

# secretKey -- Netbox django secret key (use long random string)
secretKey:

# superuserSkip -- Don't create superuser on startup.
superuserSkip: false

# superuserExistingSecret -- Use custom secret for initial superuser credentials.
# Should contain appropriate environment variable name (eg: SUPERUSER_PASSWORD)
superuserExistingSecret:

superuser:
  # superuser.email -- Email of the Netbox superuser to create on first launch
  email: admin@example.com
  # superuser.name -- Username of the Netbox superuser to create on first launch
  name: admin
  # superuser.password -- Password of the Netbox superuser to create on first launch
  password: interdata
  # superuser.apiToken -- API access token of the Netbox superuser to create on first launch
  apiToken:

# existingEnvSecret -- Provide secret environment variable. Should contain all netbox's expected secret env vars
existingEnvSecret:

extraEnvs: {}
extraSecretEnvs: {}
extraSecrets: {}
extraVolumes: []
extraVolumeMounts: []
extraContainers: []
extraInitContainers: []
extraStartupScripts: []

nginx:
  # nginx.proxyBodySize -- See: http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
  proxyBodySize:
  # nginx.customConfig -- Custom nginx configuration
  customConfig:
  # nginx.proxyPass -- Custom proxypass url
  proxyPass: http://localhost:8001

postgresql:
  # postgresql.enabled -- Enable the postgresql sub-chart
  enabled: true
  # postgresql.host -- Host of the postgresql server to use
  host:
  # postgresql.postgresqlPassword -- Postgresql password (DO NOT USE DEFAULT VALUE IN PRODUCTION)
  postgresqlPassword: netbox
  # postgresql.postgresqlUsername -- Postgresql username
  postgresqlUsername: netbox
  # postgresql.postgresqlDatabase -- Postgresql database name
  postgresqlDatabase: netbox

redis:
  cluster:
    # redis.cluster.enabled -- Enable the redis sub-chart cluster-mode
    enabled: false
  # redis.enabled -- Enable the redis sub-chart
  enabled: true
  # redis.host -- Host of the redis server
  host:
  master:
    persistence:
      # redis.master.persistence.enable -- Persistence for redis, not really needed for netbox
      enabled: false